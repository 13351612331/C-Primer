
a.out：     文件格式 elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	80 00 c0             	addb   $0xc0,(%rax)
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	01 00                	add    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 9e b6 7d e5 7b    	add    %bl,0x7be57db6(%rsi)
 37d:	50                   	push   %rax
 37e:	a8 72                	test   $0x72,%al
 380:	4a fd                	rex.WX std 
 382:	15 7e 61 e3 93       	adc    $0x93e3617e,%eax
 387:	43                   	rex.XB
 388:	bc                   	.byte 0xbc
 389:	ae                   	scas   %es:(%rdi),%al
 38a:	7f 8a                	jg     316 <__abi_tag-0x76>

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    $0x0,%al
 38e:	00 00                	add    %al,(%rax)
 390:	10 00                	adc    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	01 00                	add    %eax,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push %rbp
 39b:	00 00                	add    %al,(%rax)
 39d:	00 00                	add    %al,(%rax)
 39f:	00 03                	add    %al,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 02                	add    %al,(%rdx)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 00                	add    %al,(%rax)
 3a9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    (%rax),%al
 3b2:	00 00                	add    %al,(%rax)
 3b4:	0c 00                	or     $0x0,%al
 3b6:	00 00                	add    %al,(%rax)
 3b8:	01 00                	add    %eax,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	06                   	(bad)  
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	00 91 00 01 00 00    	add    %dl,0x100(%rcx)
 3c7:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ca:	00 00                	add    %al,(%rax)
 3cc:	00 00                	add    %al,(%rax)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	d0 65 ce             	shlb   -0x32(%rbp)
 3d3:	6d                   	insl   (%dx),%es:(%rdi)
 3d4:	15                   	.byte 0x15
 3d5:	98                   	cwtl   
 3d6:	0c 43                	or     $0x43,%al

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	5a                   	pop    %rdx
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 ef                	add    %ch,%bh
 409:	00 00                	add    %al,(%rax)
 40b:	00 12                	add    %dl,(%rdx)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 01                	add    %al,(%rcx)
 421:	01 00                	add    %eax,(%rax)
 423:	00 12                	add    %dl,(%rdx)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 ad 00 00 00 12    	add    %ch,0x12000000(%rbp)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 be 00 00 00 12    	add    %bh,0x12000000(%rsi)
	...
 465:	00 00                	add    %al,(%rax)
 467:	00 50 00             	add    %dl,0x0(%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	12 00                	adc    (%rax),%al
	...
 47e:	00 00                	add    %al,(%rax)
 480:	10 00                	adc    %al,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	20 00                	and    %al,(%rax)
	...
 496:	00 00                	add    %al,(%rax)
 498:	01 00                	add    %eax,(%rax)
 49a:	00 00                	add    %al,(%rax)
 49c:	20 00                	and    %al,(%rax)
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	46 00 00             	rex.RX add %r8b,(%rax)
 4b3:	00 12                	add    %dl,(%rdx)
	...
 4c5:	00 00                	add    %al,(%rax)
 4c7:	00 2c 00             	add    %ch,(%rax,%rax,1)
 4ca:	00 00                	add    %al,(%rax)
 4cc:	20 00                	and    %al,(%rax)
	...
 4de:	00 00                	add    %al,(%rax)
 4e0:	95                   	xchg   %eax,%ebp
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 12                	add    %dl,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 e0                	add    %ah,%al
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 22                	add    %ah,(%rdx)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 d6                	add    %dl,%dh
 511:	00 00                	add    %al,(%rax)
 513:	00 11                	add    %dl,(%rcx)
 515:	00 1a                	add    %bl,(%rdx)
 517:	00 40 40             	add    %al,0x40(%rax)
 51a:	00 00                	add    %al,(%rax)
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	10 01                	adc    %al,(%rcx)
 522:	00 00                	add    %al,(%rax)
 524:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000528 <.dynstr>:
 528:	00 5f 5f             	add    %bl,0x5f(%rdi)
 52b:	67 6d                	insl   (%dx),%es:(%edi)
 52d:	6f                   	outsl  %ds:(%rsi),(%dx)
 52e:	6e                   	outsb  %ds:(%rsi),(%dx)
 52f:	5f                   	pop    %rdi
 530:	73 74                	jae    5a6 <__abi_tag+0x21a>
 532:	61                   	(bad)  
 533:	72 74                	jb     5a9 <__abi_tag+0x21d>
 535:	5f                   	pop    %rdi
 536:	5f                   	pop    %rdi
 537:	00 5f 49             	add    %bl,0x49(%rdi)
 53a:	54                   	push   %rsp
 53b:	4d 5f                	rex.WRB pop %r15
 53d:	64 65 72 65          	fs gs jb 5a6 <__abi_tag+0x21a>
 541:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 548:	4d 
 549:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 54b:	6f                   	outsl  %ds:(%rsi),(%dx)
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	65 54                	gs push %rsp
 54f:	61                   	(bad)  
 550:	62                   	(bad)  
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 556:	54                   	push   %rsp
 557:	4d 5f                	rex.WRB pop %r15
 559:	72 65                	jb     5c0 <__abi_tag+0x234>
 55b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 562:	4d 
 563:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 565:	6f                   	outsl  %ds:(%rsi),(%dx)
 566:	6e                   	outsb  %ds:(%rsi),(%dx)
 567:	65 54                	gs push %rsp
 569:	61                   	(bad)  
 56a:	62                   	(bad)  
 56b:	6c                   	insb   (%dx),%es:(%rdi)
 56c:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 570:	4e 53                	rex.WRX push %rbx
 572:	6f                   	outsl  %ds:(%rsi),(%dx)
 573:	6c                   	insb   (%dx),%es:(%rdi)
 574:	73 45                	jae    5bb <__abi_tag+0x22f>
 576:	64 00 5f 5a          	add    %bl,%fs:0x5a(%rdi)
 57a:	4e 53                	rex.WRX push %rbx
 57c:	6f                   	outsl  %ds:(%rsi),(%dx)
 57d:	6c                   	insb   (%dx),%es:(%rdi)
 57e:	73 45                	jae    5c5 <__abi_tag+0x239>
 580:	69 00 5f 5a 53 74    	imul   $0x74535a5f,(%rax),%eax
 586:	34 65                	xor    $0x65,%al
 588:	6e                   	outsb  %ds:(%rsi),(%dx)
 589:	64 6c                	fs insb (%dx),%es:(%rdi)
 58b:	49 63 53 74          	movslq 0x74(%r11),%rdx
 58f:	31 31                	xor    %esi,(%rcx)
 591:	63 68 61             	movsxd 0x61(%rax),%ebp
 594:	72 5f                	jb     5f5 <__abi_tag+0x269>
 596:	74 72                	je     60a <__abi_tag+0x27e>
 598:	61                   	(bad)  
 599:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 5a0:	52 
 5a1:	53                   	push   %rbx
 5a2:	74 31                	je     5d5 <__abi_tag+0x249>
 5a4:	33 62 61             	xor    0x61(%rdx),%esp
 5a7:	73 69                	jae    612 <__abi_tag+0x286>
 5a9:	63 5f 6f             	movsxd 0x6f(%rdi),%ebx
 5ac:	73 74                	jae    622 <__abi_tag+0x296>
 5ae:	72 65                	jb     615 <__abi_tag+0x289>
 5b0:	61                   	(bad)  
 5b1:	6d                   	insl   (%dx),%es:(%rdi)
 5b2:	49 54                	rex.WB push %r12
 5b4:	5f                   	pop    %rdi
 5b5:	54                   	push   %rsp
 5b6:	30 5f 45             	xor    %bl,0x45(%rdi)
 5b9:	53                   	push   %rbx
 5ba:	36 5f                	ss pop %rdi
 5bc:	00 5f 5a             	add    %bl,0x5a(%rdi)
 5bf:	4e 53                	rex.WRX push %rbx
 5c1:	74 38                	je     5fb <__abi_tag+0x26f>
 5c3:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 5ca:	65 34 49             	gs xor $0x49,%al
 5cd:	6e                   	outsb  %ds:(%rsi),(%dx)
 5ce:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%rsp,%rax,2),%esi
 5d5:	5f 
 5d6:	5a                   	pop    %rdx
 5d7:	4e 53                	rex.WRX push %rbx
 5d9:	6f                   	outsl  %ds:(%rsi),(%dx)
 5da:	6c                   	insb   (%dx),%es:(%rdi)
 5db:	73 45                	jae    622 <__abi_tag+0x296>
 5dd:	50                   	push   %rax
 5de:	46 52                	rex.RX push %rdx
 5e0:	53                   	push   %rbx
 5e1:	6f                   	outsl  %ds:(%rsi),(%dx)
 5e2:	53                   	push   %rbx
 5e3:	5f                   	pop    %rdi
 5e4:	45 00 5f 5a          	add    %r11b,0x5a(%r15)
 5e8:	4e 53                	rex.WRX push %rbx
 5ea:	74 38                	je     624 <__abi_tag+0x298>
 5ec:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 5f3:	65 34 49             	gs xor $0x49,%al
 5f6:	6e                   	outsb  %ds:(%rsi),(%dx)
 5f7:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%rbx,%rax,2),%esi
 5fe:	5f 
 5ff:	5a                   	pop    %rdx
 600:	53                   	push   %rbx
 601:	74 34                	je     637 <__abi_tag+0x2ab>
 603:	63 6f 75             	movsxd 0x75(%rdi),%ebp
 606:	74 00                	je     608 <__abi_tag+0x27c>
 608:	5f                   	pop    %rdi
 609:	5f                   	pop    %rdi
 60a:	63 78 61             	movsxd 0x61(%rax),%edi
 60d:	5f                   	pop    %rdi
 60e:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 614:	7a 65                	jp     67b <__abi_tag+0x2ef>
 616:	00 5f 5f             	add    %bl,0x5f(%rdi)
 619:	6c                   	insb   (%dx),%es:(%rdi)
 61a:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 621:	72 74                	jb     697 <__abi_tag+0x30b>
 623:	5f                   	pop    %rdi
 624:	6d                   	insl   (%dx),%es:(%rdi)
 625:	61                   	(bad)  
 626:	69 6e 00 5f 5f 63 78 	imul   $0x78635f5f,0x0(%rsi),%ebp
 62d:	61                   	(bad)  
 62e:	5f                   	pop    %rdi
 62f:	61                   	(bad)  
 630:	74 65                	je     697 <__abi_tag+0x30b>
 632:	78 69                	js     69d <__abi_tag+0x311>
 634:	74 00                	je     636 <__abi_tag+0x2aa>
 636:	6c                   	insb   (%dx),%es:(%rdi)
 637:	69 62 73 74 64 63 2b 	imul   $0x2b636474,0x73(%rdx),%esp
 63e:	2b 2e                	sub    (%rsi),%ebp
 640:	73 6f                	jae    6b1 <__abi_tag+0x325>
 642:	2e 36 00 6c 69 62    	cs ss add %ch,0x62(%rcx,%rbp,2)
 648:	63 2e                	movsxd (%rsi),%ebp
 64a:	73 6f                	jae    6bb <__abi_tag+0x32f>
 64c:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 651:	49                   	rex.WB
 652:	42                   	rex.X
 653:	43 58                	rex.XB pop %r8
 655:	58                   	pop    %rax
 656:	5f                   	pop    %rdi
 657:	33 2e                	xor    (%rsi),%ebp
 659:	34 00                	xor    $0x0,%al
 65b:	47                   	rex.RXB
 65c:	4c                   	rex.WR
 65d:	49                   	rex.WB
 65e:	42                   	rex.X
 65f:	43 5f                	rex.XB pop %r15
 661:	32 2e                	xor    (%rsi),%ch
 663:	33 34 00             	xor    (%rax,%rax,1),%esi
 666:	47                   	rex.RXB
 667:	4c                   	rex.WR
 668:	49                   	rex.WB
 669:	42                   	rex.X
 66a:	43 5f                	rex.XB pop %r15
 66c:	32 2e                	xor    (%rsi),%ch
 66e:	32 2e                	xor    (%rsi),%ch
 670:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000672 <.gnu.version>:
 672:	00 00                	add    %al,(%rax)
 674:	03 00                	add    (%rax),%eax
 676:	04 00                	add    $0x0,%al
 678:	02 00                	add    (%rax),%al
 67a:	03 00                	add    (%rax),%eax
 67c:	03 00                	add    (%rax),%eax
 67e:	03 00                	add    (%rax),%eax
 680:	01 00                	add    %eax,(%rax)
 682:	01 00                	add    %eax,(%rax)
 684:	03 00                	add    (%rax),%eax
 686:	01 00                	add    %eax,(%rax)
 688:	03 00                	add    (%rax),%eax
 68a:	02 00                	add    (%rax),%al
 68c:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

0000000000000690 <.gnu.version_r>:
 690:	01 00                	add    %eax,(%rax)
 692:	01 00                	add    %eax,(%rax)
 694:	0e                   	(bad)  
 695:	01 00                	add    %eax,(%rax)
 697:	00 10                	add    %dl,(%rax)
 699:	00 00                	add    %al,(%rax)
 69b:	00 20                	add    %ah,(%rax)
 69d:	00 00                	add    %al,(%rax)
 69f:	00 74 29 92          	add    %dh,-0x6e(%rcx,%rbp,1)
 6a3:	08 00                	or     %al,(%rax)
 6a5:	00 03                	add    %al,(%rbx)
 6a7:	00 27                	add    %ah,(%rdi)
 6a9:	01 00                	add    %eax,(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 01                	add    %al,(%rcx)
 6b1:	00 02                	add    %al,(%rdx)
 6b3:	00 1d 01 00 00 10    	add    %bl,0x10000001(%rip)        # 100006ba <_end+0xfffc562>
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 b4 91 96 06 00 00 	add    %dh,0x696(%rcx,%rdx,4)
 6c6:	04 00                	add    $0x0,%al
 6c8:	33 01                	xor    (%rcx),%eax
 6ca:	00 00                	add    %al,(%rax)
 6cc:	10 00                	adc    %al,(%rax)
 6ce:	00 00                	add    %al,(%rax)
 6d0:	75 1a                	jne    6ec <__abi_tag+0x360>
 6d2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6d8:	3e 01 00             	ds add %eax,(%rax)
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006e0 <.rela.dyn>:
 6e0:	70 3d                	jo     71f <__abi_tag+0x393>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	08 00                	or     %al,(%rax)
 6ea:	00 00                	add    %al,(%rax)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	c0 11 00             	rclb   $0x0,(%rcx)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 78 3d             	add    %bh,0x3d(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	08 00                	or     %al,(%rax)
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	ce                   	(bad)  
 709:	12 00                	adc    (%rax),%al
 70b:	00 00                	add    %al,(%rax)
 70d:	00 00                	add    %al,(%rax)
 70f:	00 80 3d 00 00 00    	add    %al,0x3d(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 08                	add    %cl,(%rax)
 719:	00 00                	add    %al,(%rax)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 80 11 00 00 00    	add    %al,0x11(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 08                	add    %cl,(%rax)
 729:	40 00 00             	rex add %al,(%rax)
 72c:	00 00                	add    %al,(%rax)
 72e:	00 00                	add    %al,(%rax)
 730:	08 00                	or     %al,(%rax)
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	08 40 00             	or     %al,0x0(%rax)
 73b:	00 00                	add    %al,(%rax)
 73d:	00 00                	add    %al,(%rax)
 73f:	00 c8                	add    %cl,%al
 741:	3f                   	(bad)  
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	06                   	(bad)  
 749:	00 00                	add    %al,(%rax)
 74b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 756:	00 00                	add    %al,(%rax)
 758:	d0 3f                	sarb   (%rdi)
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	06                   	(bad)  
 761:	00 00                	add    %al,(%rax)
 763:	00 01                	add    %al,(%rcx)
	...
 76d:	00 00                	add    %al,(%rax)
 76f:	00 d8                	add    %bl,%al
 771:	3f                   	(bad)  
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	06                   	(bad)  
 779:	00 00                	add    %al,(%rax)
 77b:	00 02                	add    %al,(%rdx)
	...
 785:	00 00                	add    %al,(%rax)
 787:	00 e0                	add    %ah,%al
 789:	3f                   	(bad)  
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	06                   	(bad)  
 791:	00 00                	add    %al,(%rax)
 793:	00 07                	add    %al,(%rdi)
	...
 79d:	00 00                	add    %al,(%rax)
 79f:	00 e8                	add    %ch,%al
 7a1:	3f                   	(bad)  
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	06                   	(bad)  
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 08                	add    %cl,(%rax)
	...
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 f0                	add    %dh,%al
 7b9:	3f                   	(bad)  
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	06                   	(bad)  
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 0a                	add    %cl,(%rdx)
	...
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 f8                	add    %bh,%al
 7d1:	3f                   	(bad)  
 7d2:	00 00                	add    %al,(%rax)
 7d4:	00 00                	add    %al,(%rax)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	06                   	(bad)  
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 0b                	add    %cl,(%rbx)
	...
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 40 40             	add    %al,0x40(%rax)
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	05 00 00 00 0d       	add    $0xd000000,%eax
	...

Disassembly of section .rela.plt:

0000000000000800 <.rela.plt>:
 800:	a0 3f 00 00 00 00 00 	movabs 0x70000000000003f,%al
 807:	00 07 
 809:	00 00                	add    %al,(%rax)
 80b:	00 03                	add    %al,(%rbx)
	...
 815:	00 00                	add    %al,(%rax)
 817:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 07                	add    %al,(%rdi)
 821:	00 00                	add    %al,(%rax)
 823:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 82e:	00 00                	add    %al,(%rax)
 830:	b0 3f                	mov    $0x3f,%al
 832:	00 00                	add    %al,(%rax)
 834:	00 00                	add    %al,(%rax)
 836:	00 00                	add    %al,(%rax)
 838:	07                   	(bad)  
 839:	00 00                	add    %al,(%rax)
 83b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 841 <__abi_tag+0x4b5>
 841:	00 00                	add    %al,(%rax)
 843:	00 00                	add    %al,(%rax)
 845:	00 00                	add    %al,(%rax)
 847:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 84d:	00 00                	add    %al,(%rax)
 84f:	00 07                	add    %al,(%rdi)
 851:	00 00                	add    %al,(%rax)
 853:	00 06                	add    %al,(%rsi)
	...
 85d:	00 00                	add    %al,(%rax)
 85f:	00 c0                	add    %al,%al
 861:	3f                   	(bad)  
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	07                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 09                	add    %cl,(%rcx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	push   0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmp *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmp *0x2f3d(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001090 <__cxa_atexit@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 05 2f 00 00 	bnd jmp *0x2f05(%rip)        # 3fa0 <__cxa_atexit@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3fa8 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@GLIBCXX_3.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <std::ios_base::Init::Init()@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 2e 00 00 	bnd jmp *0x2ef5(%rip)        # 3fb0 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <std::ostream::operator<<(int)@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 2e 00 00 	bnd jmp *0x2eed(%rip)        # 3fb8 <std::ostream::operator<<(int)@GLIBCXX_3.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <std::ostream::operator<<(double)@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 2e 00 00 	bnd jmp *0x2ee5(%rip)        # 3fc0 <std::ostream::operator<<(double)@GLIBCXX_3.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	45 31 c0             	xor    %r8d,%r8d
    10f6:	31 c9                	xor    %ecx,%ecx
    10f8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 11c9 <main>
    10ff:	ff 15 d3 2e 00 00    	call   *0x2ed3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1105:	f4                   	hlt    
    1106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    110d:	00 00 00 

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d f9 2e 00 00 	lea    0x2ef9(%rip),%rdi        # 4010 <__TMC_END__>
    1117:	48 8d 05 f2 2e 00 00 	lea    0x2ef2(%rip),%rax        # 4010 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 b6 2e 00 00 	mov    0x2eb6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmp    *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d c9 2e 00 00 	lea    0x2ec9(%rip),%rdi        # 4010 <__TMC_END__>
    1147:	48 8d 35 c2 2e 00 00 	lea    0x2ec2(%rip),%rsi        # 4010 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmp    *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d c5 2f 00 00 00 	cmpb   $0x0,0x2fc5(%rip)        # 4150 <completed.0>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 32 2e 00 00 	cmpq   $0x0,0x2e32(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 d9 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	call   1110 <deregister_tm_clones>
    11ac:	c6 05 9d 2f 00 00 01 	movb   $0x1,0x2f9d(%rip)        # 4150 <completed.0>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	ret    
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmp    1140 <register_tm_clones>

00000000000011c9 <main>:
    11c9:	f3 0f 1e fa          	endbr64 
    11cd:	55                   	push   %rbp
    11ce:	48 89 e5             	mov    %rsp,%rbp
    11d1:	48 83 ec 20          	sub    $0x20,%rsp
    11d5:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    11dc:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%rbp)
    11e3:	f2 0f 10 05 1d 0e 00 	movsd  0xe1d(%rip),%xmm0        # 2008 <_IO_stdin_used+0x8>
    11ea:	00 
    11eb:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    11f0:	f2 0f 10 05 18 0e 00 	movsd  0xe18(%rip),%xmm0        # 2010 <_IO_stdin_used+0x10>
    11f7:	00 
    11f8:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    11fd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    1200:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1203:	89 d6                	mov    %edx,%esi
    1205:	89 c7                	mov    %eax,%edi
    1207:	e8 db 00 00 00       	call   12e7 <int funcT1<int>(int, int)>
    120c:	89 c6                	mov    %eax,%esi
    120e:	48 8d 05 2b 2e 00 00 	lea    0x2e2b(%rip),%rax        # 4040 <std::cout@GLIBCXX_3.4>
    1215:	48 89 c7             	mov    %rax,%rdi
    1218:	e8 a3 fe ff ff       	call   10c0 <std::ostream::operator<<(int)@plt>
    121d:	48 8b 15 ac 2d 00 00 	mov    0x2dac(%rip),%rdx        # 3fd0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    1224:	48 89 d6             	mov    %rdx,%rsi
    1227:	48 89 c7             	mov    %rax,%rdi
    122a:	e8 71 fe ff ff       	call   10a0 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
    122f:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    1234:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1238:	66 0f 28 c8          	movapd %xmm0,%xmm1
    123c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1241:	e8 b9 00 00 00       	call   12ff <double funcT1<double>(double, double)>
    1246:	66 48 0f 7e c0       	movq   %xmm0,%rax
    124b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1250:	48 8d 05 e9 2d 00 00 	lea    0x2de9(%rip),%rax        # 4040 <std::cout@GLIBCXX_3.4>
    1257:	48 89 c7             	mov    %rax,%rdi
    125a:	e8 71 fe ff ff       	call   10d0 <std::ostream::operator<<(double)@plt>
    125f:	48 8b 15 6a 2d 00 00 	mov    0x2d6a(%rip),%rdx        # 3fd0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    1266:	48 89 d6             	mov    %rdx,%rsi
    1269:	48 89 c7             	mov    %rax,%rdi
    126c:	e8 2f fe ff ff       	call   10a0 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
    1271:	b8 00 00 00 00       	mov    $0x0,%eax
    1276:	c9                   	leave  
    1277:	c3                   	ret    

0000000000001278 <__static_initialization_and_destruction_0(int, int)>:
    1278:	f3 0f 1e fa          	endbr64 
    127c:	55                   	push   %rbp
    127d:	48 89 e5             	mov    %rsp,%rbp
    1280:	48 83 ec 10          	sub    $0x10,%rsp
    1284:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1287:	89 75 f8             	mov    %esi,-0x8(%rbp)
    128a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    128e:	75 3b                	jne    12cb <__static_initialization_and_destruction_0(int, int)+0x53>
    1290:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    1297:	75 32                	jne    12cb <__static_initialization_and_destruction_0(int, int)+0x53>
    1299:	48 8d 05 b1 2e 00 00 	lea    0x2eb1(%rip),%rax        # 4151 <std::__ioinit>
    12a0:	48 89 c7             	mov    %rax,%rdi
    12a3:	e8 08 fe ff ff       	call   10b0 <std::ios_base::Init::Init()@plt>
    12a8:	48 8d 05 59 2d 00 00 	lea    0x2d59(%rip),%rax        # 4008 <__dso_handle>
    12af:	48 89 c2             	mov    %rax,%rdx
    12b2:	48 8d 05 98 2e 00 00 	lea    0x2e98(%rip),%rax        # 4151 <std::__ioinit>
    12b9:	48 89 c6             	mov    %rax,%rsi
    12bc:	48 8b 05 35 2d 00 00 	mov    0x2d35(%rip),%rax        # 3ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    12c3:	48 89 c7             	mov    %rax,%rdi
    12c6:	e8 c5 fd ff ff       	call   1090 <__cxa_atexit@plt>
    12cb:	90                   	nop
    12cc:	c9                   	leave  
    12cd:	c3                   	ret    

00000000000012ce <_GLOBAL__sub_I_main>:
    12ce:	f3 0f 1e fa          	endbr64 
    12d2:	55                   	push   %rbp
    12d3:	48 89 e5             	mov    %rsp,%rbp
    12d6:	be ff ff 00 00       	mov    $0xffff,%esi
    12db:	bf 01 00 00 00       	mov    $0x1,%edi
    12e0:	e8 93 ff ff ff       	call   1278 <__static_initialization_and_destruction_0(int, int)>
    12e5:	5d                   	pop    %rbp
    12e6:	c3                   	ret    

00000000000012e7 <int funcT1<int>(int, int)>:
    12e7:	f3 0f 1e fa          	endbr64 
    12eb:	55                   	push   %rbp
    12ec:	48 89 e5             	mov    %rsp,%rbp
    12ef:	89 7d fc             	mov    %edi,-0x4(%rbp)
    12f2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    12f5:	8b 55 fc             	mov    -0x4(%rbp),%edx
    12f8:	8b 45 f8             	mov    -0x8(%rbp),%eax
    12fb:	01 d0                	add    %edx,%eax
    12fd:	5d                   	pop    %rbp
    12fe:	c3                   	ret    

00000000000012ff <double funcT1<double>(double, double)>:
    12ff:	f3 0f 1e fa          	endbr64 
    1303:	55                   	push   %rbp
    1304:	48 89 e5             	mov    %rsp,%rbp
    1307:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    130c:	f2 0f 11 4d f0       	movsd  %xmm1,-0x10(%rbp)
    1311:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    1316:	f2 0f 58 45 f0       	addsd  -0x10(%rbp),%xmm0
    131b:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1320:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1325:	5d                   	pop    %rbp
    1326:	c3                   	ret    

Disassembly of section .fini:

0000000000001328 <_fini>:
    1328:	f3 0f 1e fa          	endbr64 
    132c:	48 83 ec 08          	sub    $0x8,%rsp
    1330:	48 83 c4 08          	add    $0x8,%rsp
    1334:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	9a                   	(bad)  
    2009:	99                   	cltd   
    200a:	99                   	cltd   
    200b:	99                   	cltd   
    200c:	99                   	cltd   
    200d:	99                   	cltd   
    200e:	f1                   	int1   
    200f:	3f                   	(bad)  
    2010:	9a                   	(bad)  
    2011:	99                   	cltd   
    2012:	99                   	cltd   
    2013:	99                   	cltd   
    2014:	99                   	cltd   
    2015:	99                   	cltd   
    2016:	01                   	.byte 0x1
    2017:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000002018 <__GNU_EH_FRAME_HDR>:
    2018:	01 1b                	add    %ebx,(%rbx)
    201a:	03 3b                	add    (%rbx),%edi
    201c:	54                   	push   %rsp
    201d:	00 00                	add    %al,(%rax)
    201f:	00 09                	add    %cl,(%rcx)
    2021:	00 00                	add    %al,(%rax)
    2023:	00 08                	add    %cl,(%rax)
    2025:	f0 ff                	lock (bad) 
    2027:	ff 88 00 00 00 68    	decl   0x68000000(%rax)
    202d:	f0 ff                	lock (bad) 
    202f:	ff b0 00 00 00 78    	push   0x78000000(%rax)
    2035:	f0 ff                	lock (bad) 
    2037:	ff c8                	dec    %eax
    2039:	00 00                	add    %al,(%rax)
    203b:	00 c8                	add    %cl,%al
    203d:	f0 ff                	lock (bad) 
    203f:	ff 70 00             	push   0x0(%rax)
    2042:	00 00                	add    %al,(%rax)
    2044:	b1 f1                	mov    $0xf1,%cl
    2046:	ff                   	(bad)  
    2047:	ff e0                	jmp    *%rax
    2049:	00 00                	add    %al,(%rax)
    204b:	00 60 f2             	add    %ah,-0xe(%rax)
    204e:	ff                   	(bad)  
    204f:	ff 40 01             	incl   0x1(%rax)
    2052:	00 00                	add    %al,(%rax)
    2054:	b6 f2                	mov    $0xf2,%dh
    2056:	ff                   	(bad)  
    2057:	ff 60 01             	jmp    *0x1(%rax)
    205a:	00 00                	add    %al,(%rax)
    205c:	cf                   	iret   
    205d:	f2 ff                	repnz (bad) 
    205f:	ff 00                	incl   (%rax)
    2061:	01 00                	add    %eax,(%rax)
    2063:	00 e7                	add    %ah,%bh
    2065:	f2 ff                	repnz (bad) 
    2067:	ff 20                	jmp    *(%rax)
    2069:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000002070 <__FRAME_END__-0x128>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x77>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	50                   	push   %rax
    2091:	f0 ff                	lock (bad) 
    2093:	ff 26                	jmp    *(%rsi)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 00                	add    %al,(%rax)
    2099:	44 07                	rex.R (bad) 
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__GNU_EH_FRAME_HDR+0x81>
    20aa:	ff                   	(bad)  
    20ab:	ff 60 00             	jmp    *0x0(%rax)
    20ae:	00 00                	add    %al,(%rax)
    20b0:	00 0e                	add    %cl,(%rsi)
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 3a                	sbb    (%rdx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 b0 ef ff ff 10    	add    %dh,0x10ffffef(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__GNU_EH_FRAME_HDR+0xce>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	a8 ef                	test   $0xef,%al
    20ea:	ff                   	(bad)  
    20eb:	ff 50 00             	call   *0x0(%rax)
	...
    20f6:	00 00                	add    %al,(%rax)
    20f8:	1c 00                	sbb    $0x0,%al
    20fa:	00 00                	add    %al,(%rax)
    20fc:	8c 00                	mov    %es,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	c9                   	leave  
    2101:	f0 ff                	lock (bad) 
    2103:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    2109:	45 0e                	rex.RB (bad) 
    210b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2111:	02 a6 0c 07 08 00    	add    0x8070c(%rsi),%ah
    2117:	00 1c 00             	add    %bl,(%rax,%rax,1)
    211a:	00 00                	add    %al,(%rax)
    211c:	ac                   	lods   %ds:(%rsi),%al
    211d:	00 00                	add    %al,(%rax)
    211f:	00 c7                	add    %al,%bh
    2121:	f1                   	int1   
    2122:	ff                   	(bad)  
    2123:	ff 18                	lcall  *(%rax)
    2125:	00 00                	add    %al,(%rax)
    2127:	00 00                	add    %al,(%rax)
    2129:	45 0e                	rex.RB (bad) 
    212b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2131:	4f 0c 07             	rex.WRXB or $0x7,%al
    2134:	08 00                	or     %al,(%rax)
    2136:	00 00                	add    %al,(%rax)
    2138:	1c 00                	sbb    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	cc                   	int3   
    213d:	00 00                	add    %al,(%rax)
    213f:	00 bf f1 ff ff 28    	add    %bh,0x28fffff1(%rdi)
    2145:	00 00                	add    %al,(%rax)
    2147:	00 00                	add    %al,(%rax)
    2149:	45 0e                	rex.RB (bad) 
    214b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2151:	5f                   	pop    %rdi
    2152:	0c 07                	or     $0x7,%al
    2154:	08 00                	or     %al,(%rax)
    2156:	00 00                	add    %al,(%rax)
    2158:	1c 00                	sbb    $0x0,%al
    215a:	00 00                	add    %al,(%rax)
    215c:	ec                   	in     (%dx),%al
    215d:	00 00                	add    %al,(%rax)
    215f:	00 18                	add    %bl,(%rax)
    2161:	f1                   	int1   
    2162:	ff                   	(bad)  
    2163:	ff 56 00             	call   *0x0(%rsi)
    2166:	00 00                	add    %al,(%rax)
    2168:	00 45 0e             	add    %al,0xe(%rbp)
    216b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2171:	02 4d 0c             	add    0xc(%rbp),%cl
    2174:	07                   	(bad)  
    2175:	08 00                	or     %al,(%rax)
    2177:	00 1c 00             	add    %bl,(%rax,%rax,1)
    217a:	00 00                	add    %al,(%rax)
    217c:	0c 01                	or     $0x1,%al
    217e:	00 00                	add    %al,(%rax)
    2180:	4e f1                	rex.WRX int1 
    2182:	ff                   	(bad)  
    2183:	ff 19                	lcall  *(%rcx)
    2185:	00 00                	add    %al,(%rax)
    2187:	00 00                	add    %al,(%rax)
    2189:	45 0e                	rex.RB (bad) 
    218b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2191:	50                   	push   %rax
    2192:	0c 07                	or     $0x7,%al
    2194:	08 00                	or     %al,(%rax)
	...

0000000000002198 <__FRAME_END__>:
    2198:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d70 <__frame_dummy_init_array_entry>:
    3d70:	c0 11 00             	rclb   $0x0,(%rcx)
    3d73:	00 00                	add    %al,(%rax)
    3d75:	00 00                	add    %al,(%rax)
    3d77:	00 ce                	add    %cl,%dh
    3d79:	12 00                	adc    (%rax),%al
    3d7b:	00 00                	add    %al,(%rax)
    3d7d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d80 <__do_global_dtors_aux_fini_array_entry>:
    3d80:	80 11 00             	adcb   $0x0,(%rcx)
    3d83:	00 00                	add    %al,(%rax)
    3d85:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d88 <_DYNAMIC>:
    3d88:	01 00                	add    %eax,(%rax)
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	0e                   	(bad)  
    3d91:	01 00                	add    %eax,(%rax)
    3d93:	00 00                	add    %al,(%rax)
    3d95:	00 00                	add    %al,(%rax)
    3d97:	00 01                	add    %al,(%rcx)
    3d99:	00 00                	add    %al,(%rax)
    3d9b:	00 00                	add    %al,(%rax)
    3d9d:	00 00                	add    %al,(%rax)
    3d9f:	00 1d 01 00 00 00    	add    %bl,0x1(%rip)        # 3da6 <_DYNAMIC+0x1e>
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
    3dae:	00 00                	add    %al,(%rax)
    3db0:	00 10                	add    %dl,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	0d 00 00 00 00       	or     $0x0,%eax
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 28                	add    %ch,(%rax)
    3dc1:	13 00                	adc    (%rax),%eax
    3dc3:	00 00                	add    %al,(%rax)
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 19                	add    %bl,(%rcx)
    3dc9:	00 00                	add    %al,(%rax)
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 70 3d             	add    %dh,0x3d(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	1b 00                	sbb    (%rax),%eax
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	10 00                	adc    %al,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	1a 00                	sbb    (%rax),%al
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 3df7 <_DYNAMIC+0x6f>
    3df7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	08 00                	or     %al,(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	f5                   	cmc    
    3e09:	fe                   	(bad)  
    3e0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e1d <_DYNAMIC+0x95>
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 28                	add    %ch,(%rax)
    3e21:	05 00 00 00 00       	add    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	06                   	(bad)  
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 d8                	add    %bl,%al
    3e31:	03 00                	add    (%rax),%eax
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 0a                	add    %cl,(%rdx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 4a 01             	add    %cl,0x1(%rdx)
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	0b 00                	or     (%rax),%eax
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	18 00                	sbb    %al,(%rax)
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 03                	add    %al,(%rbx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 88 3f 00 00 00    	add    %cl,0x3f(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 02                	add    %al,(%rdx)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 78 00             	add    %bh,0x0(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	14 00                	adc    $0x0,%al
    3e8a:	00 00                	add    %al,(%rax)
    3e8c:	00 00                	add    %al,(%rax)
    3e8e:	00 00                	add    %al,(%rax)
    3e90:	07                   	(bad)  
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 17                	add    %dl,(%rdi)
	...
    3ea1:	08 00                	or     %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 07                	add    %al,(%rdi)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 e0                	add    %ah,%al
    3eb1:	06                   	(bad)  
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	08 00                	or     %al,(%rax)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	20 01                	and    %al,(%rcx)
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	09 00                	or     %eax,(%rax)
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	18 00                	sbb    %al,(%rax)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	1e                   	(bad)  
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 08                	add    %cl,(%rax)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 fb                	add    %bh,%bl
    3ee9:	ff                   	(bad)  
    3eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 01                	add    %al,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	08 00                	or     %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 fe                	add    %bh,%dh
    3ef9:	ff                   	(bad)  
    3efa:	ff 6f 00             	ljmp   *0x0(%rdi)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 90 06 00 00 00    	add    %dl,0x6(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 ff                	add    %bh,%bh
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 02                	add    %al,(%rdx)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 f0                	add    %dh,%al
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 72 06             	add    %dh,0x6(%rdx)
    3f22:	00 00                	add    %al,(%rax)
    3f24:	00 00                	add    %al,(%rax)
    3f26:	00 00                	add    %al,(%rax)
    3f28:	f9                   	stc    
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000003f88 <_GLOBAL_OFFSET_TABLE_>:
    3f88:	88 3d 00 00 00 00    	mov    %bh,0x0(%rip)        # 3f8e <_GLOBAL_OFFSET_TABLE_+0x6>
	...
    3f9e:	00 00                	add    %al,(%rax)
    3fa0:	30 10                	xor    %dl,(%rax)
    3fa2:	00 00                	add    %al,(%rax)
    3fa4:	00 00                	add    %al,(%rax)
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	40 10 00             	rex adc %al,(%rax)
    3fab:	00 00                	add    %al,(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 50 10             	add    %dl,0x10(%rax)
    3fb2:	00 00                	add    %al,(%rax)
    3fb4:	00 00                	add    %al,(%rax)
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	60                   	(bad)  
    3fb9:	10 00                	adc    %al,(%rax)
    3fbb:	00 00                	add    %al,(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 70 10             	add    %dh,0x10(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004040 <std::cout@GLIBCXX_3.4>:
	...

0000000000004150 <completed.0>:
	...

0000000000004151 <std::__ioinit>:
    4151:	00 00                	add    %al,(%rax)
    4153:	00 00                	add    %al,(%rax)
    4155:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <_end+0x756233f1>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	32 2e                	xor    (%rsi),%ch
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)
